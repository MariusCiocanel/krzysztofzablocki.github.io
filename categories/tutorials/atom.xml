<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tutorials | Krzysztof Zabłocki]]></title>
  <link href="http://krzysztofzablocki.github.com/krzysztofzablocki/categories/tutorials/atom.xml" rel="self"/>
  <link href="http://krzysztofzablocki.github.com/krzysztofzablocki/"/>
  <updated>2015-05-05T03:08:41+02:00</updated>
  <id>http://krzysztofzablocki.github.com/krzysztofzablocki/</id>
  <author>
    <name><![CDATA[Krzysztof Zabłocki]]></name>
    <email><![CDATA[krzysztof.zablocki@pixle.pl]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Simple Image Comparison View]]></title>
    <link href="http://krzysztofzablocki.github.com/krzysztofzablocki/2014/05/implementing-image-comparison-view-in-20-minutes"/>
    <updated>2014-05-20T11:21:00+02:00</updated>
    <id>http://krzysztofzablocki.github.com/krzysztofzablocki/2014/05/implementing-image-comparison-view-in-20-minutes</id>
    <content type="html"><![CDATA[<p>Did you ever see image split available in Kaleidoscope? It's really easy to implement similar one in iOS with some CoreAnimation code.</p>

<p><img src="http://www.merowing.info/uploads/2014/05/ImageSplit.gif" width="180" height="270"></p>

<!-- more -->


<h1>Basic</h1>

<ol>
<li>Stack 2 UIImageViews on top of each other.</li>
<li>Use CAShapeLayer to generate mask to hide part of our top one.</li>
<li>Mask will be a simple triangle that changes it's extents as we move our finger.</li>
</ol>


<p><img src="http://www.merowing.info/uploads/2014/05/layersMasked.png" width="160">
<img src="http://www.merowing.info/uploads/2014/05/mask.png" width="160"></p>

<p>We only need to create a simple triangle that conveys that.
To be able to reduce or increase mask size we need to manipulate topLeft and bottomRight vertices of that triangle.
We just need to move them proportionally to our width/height ratio like so:</p>

<p><div><div class='bogus-wrapper'><notextile><button class='toggle-code' title='show'>Show Code</button><figure class='code hide'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">CGPathRef</span><span class="p">)</span><span class="nf">pathForMaskingUpToPercentage:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">percentage</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="c1">//! 1.</span>
</span><span class='line'>  <span class="k">const</span> <span class="n">CGFloat</span> <span class="n">width</span> <span class="o">=</span> <span class="n">CGRectGetWidth</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">);</span>
</span><span class='line'>  <span class="k">const</span> <span class="n">CGFloat</span> <span class="n">height</span> <span class="o">=</span> <span class="n">CGRectGetHeight</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">);</span>
</span><span class='line'>  <span class="k">const</span> <span class="n">CGFloat</span> <span class="n">ratio</span> <span class="o">=</span> <span class="n">width</span> <span class="o">/</span> <span class="n">height</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//! 2.</span>
</span><span class='line'>  <span class="k">const</span> <span class="n">CGFloat</span> <span class="n">min</span> <span class="o">=</span> <span class="n">MAX</span><span class="p">(</span><span class="n">height</span><span class="p">,</span> <span class="n">width</span><span class="p">);</span>
</span><span class='line'>  <span class="k">const</span> <span class="n">CGFloat</span> <span class="n">offset</span> <span class="o">=</span> <span class="o">-</span><span class="n">min</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">min</span> <span class="o">*</span> <span class="n">percentage</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//! 3.</span>
</span><span class='line'>  <span class="n">UIBezierPath</span> <span class="o">*</span><span class="n">bezierPath</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIBezierPath</span> <span class="n">bezierPath</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">bezierPath</span> <span class="nl">moveToPoint:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">height</span><span class="p">)];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">bezierPath</span> <span class="nl">addLineToPoint:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="o">-</span> <span class="n">offset</span><span class="p">)];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">bezierPath</span> <span class="nl">addLineToPoint:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="n">width</span> <span class="o">+</span> <span class="n">offset</span> <span class="o">*</span> <span class="n">ratio</span><span class="p">,</span> <span class="n">height</span><span class="p">)];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">bezierPath</span> <span class="n">closePath</span><span class="p">];</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">bezierPath</span><span class="p">.</span><span class="n">CGPath</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></div></p>

<ol>
<li>Calculate screen ratio</li>
<li>Grab min which equals to turned-off masking.</li>
<li>Expand triangle by using offset and adjusting for screen ratio.</li>
</ol>


<h1>Driving UIX by GestureRecognizer</h1>

<p>We want to be able to drive our masking by using simple pan gesture recognizer, we can implement it as follows:
<div><div class='bogus-wrapper'><notextile><button class='toggle-code' title='show'>Show Code</button><figure class='code hide'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">handlePanGesture:</span><span class="p">(</span><span class="n">UIPanGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">gestureRecognizer</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="c1">//! 1.</span>
</span><span class='line'>  <span class="k">const</span> <span class="n">CGPoint</span> <span class="n">location</span> <span class="o">=</span> <span class="p">[</span><span class="n">gestureRecognizer</span> <span class="nl">locationInView:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>  <span class="k">const</span> <span class="n">CGFloat</span> <span class="n">width</span> <span class="o">=</span> <span class="n">CGRectGetWidth</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">);</span>
</span><span class='line'>  <span class="k">const</span> <span class="n">CGFloat</span> <span class="n">height</span> <span class="o">=</span> <span class="n">CGRectGetHeight</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//! 2.</span>
</span><span class='line'>  <span class="k">const</span> <span class="n">CGFloat</span> <span class="n">distance</span> <span class="o">=</span> <span class="n">sqrtf</span><span class="p">((</span><span class="kt">float</span><span class="p">)(</span><span class="n">location</span><span class="p">.</span><span class="n">x</span> <span class="o">*</span> <span class="n">location</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">pow</span><span class="p">((</span><span class="n">height</span> <span class="o">-</span> <span class="n">location</span><span class="p">.</span><span class="n">y</span><span class="p">),</span> <span class="mi">2</span><span class="p">)));</span>
</span><span class='line'>  <span class="k">const</span> <span class="n">CGFloat</span> <span class="n">maxDistance</span> <span class="o">=</span> <span class="n">sqrtf</span><span class="p">(</span><span class="n">width</span> <span class="o">*</span> <span class="n">width</span> <span class="o">+</span> <span class="n">height</span> <span class="o">*</span> <span class="n">height</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//! 3.</span>
</span><span class='line'>  <span class="n">CGFloat</span> <span class="n">fraction</span> <span class="o">=</span> <span class="n">distance</span> <span class="o">/</span> <span class="n">maxDistance</span><span class="p">;</span>
</span><span class='line'>  <span class="k">const</span> <span class="n">CGPathRef</span> <span class="n">newPath</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">pathForMaskingUpToPercentage:</span><span class="n">fraction</span><span class="p">];</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">shapeLayer</span><span class="p">.</span><span class="n">path</span> <span class="o">=</span> <span class="n">newPath</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></div></p>

<ol>
<li>Just grab values for calculation.</li>
<li>Use simple vector math to calculate max allowed distance and the distance to user finger.</li>
<li>Calculate how far in normalized distance user finger is, then grab a mask for that percentage and set it on shapeLayer.</li>
</ol>


<h1>Adding snapping behaviour</h1>

<p>It would be nice if when we lifted finger close to screen boundries our mask would snap with animation, we can add that by simply using CoreAnimation and simple math:
<div><div class='bogus-wrapper'><notextile><button class='toggle-code' title='show'>Show Code</button><figure class='code hide'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//! 1.</span>
</span><span class='line'><span class="k">const</span> <span class="kt">BOOL</span> <span class="n">isEnding</span> <span class="o">=</span> <span class="n">gestureRecognizer</span><span class="p">.</span><span class="n">state</span> <span class="o">==</span> <span class="n">UIGestureRecognizerStateEnded</span><span class="p">;</span>
</span><span class='line'>  <span class="k">const</span> <span class="n">CGFloat</span> <span class="n">snapMargin</span> <span class="o">=</span> <span class="n">kPathSnapMarginPercentage</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">isEnding</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">fraction</span> <span class="o">&gt;</span> <span class="mf">1.0</span> <span class="o">-</span> <span class="n">snapMargin</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">fraction</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">if</span> <span class="p">(</span><span class="n">isEnding</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">fraction</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">snapMargin</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">fraction</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">const</span> <span class="n">CGPathRef</span> <span class="n">newPath</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">pathForMaskingUpToPercentage:</span><span class="n">fraction</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//! 2.</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">isEnding</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">CABasicAnimation</span> <span class="o">*</span><span class="n">pathAnimation</span> <span class="o">=</span> <span class="p">[</span><span class="n">CABasicAnimation</span> <span class="nl">animationWithKeyPath:</span><span class="s">@&quot;path&quot;</span><span class="p">];</span>
</span><span class='line'><span class="c1">//! 3.</span>
</span><span class='line'><span class="n">pathAnimation</span><span class="p">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">self</span><span class="p">.</span><span class="n">shapeLayer</span><span class="p">.</span><span class="n">path</span><span class="p">;</span>
</span><span class='line'><span class="n">pathAnimation</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="p">(</span><span class="n">__bridge</span> <span class="kt">id</span><span class="p">)</span><span class="n">newPath</span><span class="p">;</span>
</span><span class='line'><span class="n">pathAnimation</span><span class="p">.</span><span class="n">duration</span> <span class="o">=</span> <span class="n">kPathSnappingDuration</span><span class="p">;</span>
</span><span class='line'><span class="n">pathAnimation</span><span class="p">.</span><span class="n">timingFunction</span> <span class="o">=</span> <span class="p">[</span><span class="n">CAMediaTimingFunction</span> <span class="nl">functionWithName:</span><span class="n">kCAMediaTimingFunctionEaseInEaseOut</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">shapeLayer</span> <span class="nl">addAnimation:</span><span class="n">pathAnimation</span> <span class="nl">forKey:</span><span class="s">@&quot;path&quot;</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//! 4.</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">shapeLayer</span><span class="p">.</span><span class="n">path</span> <span class="o">=</span> <span class="n">newPath</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></div></p>

<ol>
<li>Verify that user lifted their finger.</li>
<li>Add simple path animation to our shape layer.</li>
<li>Remember to set fromValue as we will be changing model layer after this animation block, otherwise you'd have a difference between model and presentation layers.</li>
<li>Update model layer.</li>
</ol>


<p><a href="http://www.merowing.info/2012/07/pinch-to-reveal-animation-like-in-boeing-milestones/">For more masking examples check-out my old article about Pinch to Reveal effect</a></p>

<p><a href="https://github.com/krzysztofzablocki/KZImageSplitView">Full source code at GitHub</a></p>

<p><a href="http://twitter.com/merowing_">Send me a tweet</a></p>
]]></content>
  </entry>
  
</feed>
