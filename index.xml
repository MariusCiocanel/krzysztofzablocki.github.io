<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on Krzysztof Zabłocki </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://merowing.info/</link>
    <language>en-us</language>
    
    
    <updated>Thu, 10 Dec 2015 12:14:28 &#43;0100</updated>
    
    <item>
      <title>The best of my creations</title>
      <link>http://merowing.info/bestOf/</link>
      <pubDate>Thu, 10 Dec 2015 12:14:28 &#43;0100</pubDate>
      
      <guid>http://merowing.info/bestOf/</guid>
      <description>This is an list of what I think are best things you should check out, a lot of it is based on usefulness / popularity but also my personal view how important or helpful they are. Libraries / Tools KZPlaygrounds - Playgrounds that can support both Swift and Objective-C + a lot of extra features that will make your life easier. KZPropertyMapper - If you have to map JSON in Objective-C, this is really helpful and it requires nothing at all from your code base, no subclassing, no dependencies and no restrictions.</description>
    </item>
    
    <item>
      <title>Writing Xcode plugin in Swift</title>
      <link>http://merowing.info/2015/12/writing-xcode-plugin-in-swift/</link>
      <pubDate>Tue, 08 Dec 2015 11:07:09 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2015/12/writing-xcode-plugin-in-swift/</guid>
      <description>&lt;p&gt;
&lt;figure class=&#34;center&#34;&gt;
    
        &lt;img src=&#34;http://merowing.info/2015/12/logs.gif&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve found myself using Xcode a lot more than I did in Objective-C.&lt;/p&gt;

&lt;p&gt;One of things I’ve missed a lot from my &lt;a href=&#34;https://www.jetbrains.com/objc/&#34;&gt;AppCode&lt;/a&gt; setup, is the  ability to jump to specific file &amp;amp; line that logged a console message.&lt;/p&gt;

&lt;p&gt;Because Xcode doesn’t offer such functionality and because I do not like to complain, I’ve decided to write my own plugin for it.&lt;/p&gt;

&lt;p&gt;I wrote it in Swift.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The beauty of imperfection</title>
      <link>http://merowing.info/2015/11/the-beauty-of-imperfection/</link>
      <pubDate>Tue, 24 Nov 2015 12:29:37 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2015/11/the-beauty-of-imperfection/</guid>
      <description>&lt;video autoplay loop&gt;
  &lt;source src=&#34;http://merowing.info/2015/12/dot-animated.mov&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;

&lt;p&gt;Perfection is not something one can truly achieve, so it’s very smart that one of the best meditation services called &lt;a href=&#34;https://www.headspace.com&#34;&gt;Headspace&lt;/a&gt; is using an imperfect dot as their brand logo.&lt;/p&gt;

&lt;p&gt;If you ever used their iOS app, you can notice how their dot slightly deforms, captivating your focus.&lt;/p&gt;

&lt;p&gt;When it comes to graphics, if you are able to cheat (if user can’t tell the difference) and make tech stuff easier, just do it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Swift init()</title>
      <link>http://merowing.info/2015/11/swift-init/</link>
      <pubDate>Tue, 17 Nov 2015 13:51:00 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2015/11/swift-init/</guid>
      <description>&lt;p&gt;With Swift strong typing and immutability, there are rules that prevent you from accesing variables until an object is fully initialized.&lt;/p&gt;

&lt;p&gt;I do not like having a function do more than one thing, so I like to split my initializers into multiple functions, this becomes problematic.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips for Interface Builder</title>
      <link>http://merowing.info/2015/11/tips-for-interface-builder/</link>
      <pubDate>Fri, 13 Nov 2015 00:00:00 UTC</pubDate>
      
      <guid>http://merowing.info/2015/11/tips-for-interface-builder/</guid>
      <description>&lt;p&gt;Young developers are happy when they write a lot of code, they like to brag about that project that has tens of thousands lines of code they wrote.&lt;/p&gt;

&lt;p&gt;As we get more experienced, we realize that code is expensive. It&amp;rsquo;s expensive to maintain, debug and reason about.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s why we should aim to use tools that can help us avoid writing boilerplate code, one of those tools is Interface Builder.&lt;/p&gt;

&lt;p&gt;Here are a few of my favourite tips &amp;amp; tricks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Prototyping floating burger menu with CAShapeLayer</title>
      <link>http://merowing.info/2015/11/prototyping-floating-burger-menu-with-cashapelayer/</link>
      <pubDate>Wed, 04 Nov 2015 13:29:44 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2015/11/prototyping-floating-burger-menu-with-cashapelayer/</guid>
      <description>&lt;video autoplay loop&gt;
  &lt;source src=&#34;http://merowing.info/2015/11/Header-small.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;

&lt;p&gt;Reproducing above effect is very simple with CAShapeLayer and CoreAnimation&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://merowing.info/about/</link>
      <pubDate>Tue, 27 Oct 2015 14:09:49 &#43;0100</pubDate>
      
      <guid>http://merowing.info/about/</guid>
      <description>I am a software engineer. For the last 5+ years iOS has been my main focus. Before that I used to do games and graphics programming. When I&amp;rsquo;m not programming, I&amp;rsquo;m usually training at the Gym or reading about Psychology. I was 8 years old when I started learning fast and I&amp;rsquo;ve never really stopped. Before getting involved with contract work, I was the Lead App Engineer at The App Business in London.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://merowing.info/speaking/</link>
      <pubDate>Tue, 27 Oct 2015 14:09:49 &#43;0100</pubDate>
      
      <guid>http://merowing.info/speaking/</guid>
      <description>I speak mostly about technical topics around iOS platform. If you&amp;rsquo;d like to invite me to speak at your conference, send me an email.. Talks 17th April 2015 - EN - Stop recompiling. Mobile Days 10th February 2015 - EN - Stop recompiling. New York iOS Developer Meetup 4th February 2015 - EN - Stop recompiling. Mobile Central Europe 12th January 2015 - EN - Empower your Objective-C. CocoaHeads Stockholm 17th December 2014 - EN - Empower your Objective-C.</description>
    </item>
    
    <item>
      <title>Simple way to scrape web with Ruby</title>
      <link>http://merowing.info/2015/01/extracting-data-from-websites-without-api/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 UTC</pubDate>
      
      <guid>http://merowing.info/2015/01/extracting-data-from-websites-without-api/</guid>
      <description>&lt;p&gt;MyFitnessPal didn&amp;rsquo;t give me API access, so I wrote some Ruby to get it anyway.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Playgrounds for Objective C</title>
      <link>http://merowing.info/2014/10/playgrounds-for-objective-c/</link>
      <pubDate>Thu, 23 Oct 2014 00:00:00 UTC</pubDate>
      
      <guid>http://merowing.info/2014/10/playgrounds-for-objective-c/</guid>
      <description>&lt;p&gt;Playgrounds are one of the niftiest features of Swift.&lt;/p&gt;

&lt;p&gt;They allow you to quickly test out bits of code and see results in real time without going through the traditional edit-compile-run-debug cycle.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;But surely playgrounds aren&amp;rsquo;t possible in Objective-C?&amp;rdquo; you say&amp;hellip; Think again.&lt;/p&gt;

&lt;p&gt;&lt;div 
class=&#34;magnific-video mpf-iframe embed video-player &#34;&gt;
	&lt;iframe src=&#34;http://player.vimeo.com/video/109757619&#34; type=&#34;text/html&#34;
		allowfullscreen
		frameborder=&#34;0&#34;
		width=&#34;100%&#34;
		height=&#34;385&#34;
	&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&#34;features:628f4197a88d9024a7ea07216490739a&#34;&gt;Features&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Faster than Swift playgrounds (a lot)&lt;/li&gt;
&lt;li&gt;Extra controls for tweaking:&lt;/li&gt;
&lt;li&gt;Adjustable values&lt;/li&gt;
&lt;li&gt;Autoanimated values&lt;/li&gt;
&lt;li&gt;Buttons&lt;/li&gt;
&lt;li&gt;IDE agnostic, once you run it, you can modify the code even from vim.&lt;/li&gt;
&lt;li&gt;Full iOS simulator and access to all iOS features, so you can prototype production ready code.&lt;/li&gt;
&lt;li&gt;Nice DSL for rapid prototyping&lt;/li&gt;
&lt;li&gt;CocoaPods support, so you can add it to existing projects to experiment&lt;/li&gt;
&lt;li&gt;Open source, anyone can contribute to make them better!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/krzysztofzablocki/KZPlayground&#34;&gt;Source code on GitHub&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>iOS Project Bootstrap</title>
      <link>http://merowing.info/2014/10/ios-project-bootstrap/</link>
      <pubDate>Wed, 15 Oct 2014 00:00:00 UTC</pubDate>
      
      <guid>http://merowing.info/2014/10/ios-project-bootstrap/</guid>
      <description>&lt;p&gt;If you are looking for some good quality project settings and scripts, I&amp;rsquo;ve open-sources my bootstrap for upcoming 2015.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/krzysztofzablocki/KZBootstrap&#34;&gt;Check it out on github.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How do I work?</title>
      <link>http://merowing.info/2014/10/how-do-i-work/</link>
      <pubDate>Mon, 06 Oct 2014 00:00:00 UTC</pubDate>
      
      <guid>http://merowing.info/2014/10/how-do-i-work/</guid>
      <description>&lt;p&gt;I’ve been programming for 18 years now, doing commercial work for the last 6.&lt;/p&gt;

&lt;p&gt;Over the years I’ve been exposed to different ideas and experiences that have constantly affected the way I work.&lt;/p&gt;

&lt;p&gt;What matters and how I go about working for my clients?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Swift introduction into fitness</title>
      <link>http://merowing.info/2014/09/a-swift-introduction-into-fitness/</link>
      <pubDate>Tue, 30 Sep 2014 00:00:00 UTC</pubDate>
      
      <guid>http://merowing.info/2014/09/a-swift-introduction-into-fitness/</guid>
      <description>&lt;p&gt;Many people think getting fit is hard, the fitness industry is full of myths and unnecessary complications.&lt;/p&gt;

&lt;p&gt;Doesn’t matter if your goal is to lose weight or gain it, what matter is Physics and law of energy:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you burn more calories than you eat you will lose weight&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Two questions arise:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;how to estimate our caloric needs?&lt;/li&gt;
&lt;li&gt;how fast should we lose or gain weight?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We&amp;rsquo;ll use Swift Playgrounds to explain it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing less code</title>
      <link>http://merowing.info/2014/08/writing-less-code/</link>
      <pubDate>Wed, 27 Aug 2014 00:00:00 UTC</pubDate>
      
      <guid>http://merowing.info/2014/08/writing-less-code/</guid>
      <description>&lt;p&gt;What are some of my favorite techniques for cleaner and more readable code?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Improving development speed</title>
      <link>http://merowing.info/2014/07/improving-development-speed/</link>
      <pubDate>Fri, 18 Jul 2014 00:00:00 UTC</pubDate>
      
      <guid>http://merowing.info/2014/07/improving-development-speed/</guid>
      <description>&lt;p&gt;I wrote a blogpost about improving iteration speed and why code injection is awesome when you work on small changes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.lextech.com/2014/07/3-big-ways-to-speed-up-your-development-cycle/&#34;&gt;Read it on Lextech blog&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

